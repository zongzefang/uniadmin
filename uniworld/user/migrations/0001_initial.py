# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-03-10 20:19
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import easy_thumbnails.fields
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('room', '0001_initial'),
        ('other', '0001_initial'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UniUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=15)),
                ('avatar', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to=user.models.upload_to)),
                ('gender', models.NullBooleanField()),
                ('signature', models.CharField(blank=True, max_length=50)),
                ('department', models.CharField(blank=True, max_length=20)),
                ('year', models.CharField(blank=True, max_length=4)),
            ],
            options={
                'verbose_name_plural': 'users',
                'abstract': False,
                'verbose_name': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='HostThumbDown',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='room.Room')),
            ],
        ),
        migrations.CreateModel(
            name='HostThumbUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='room.Room')),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantThumbDown',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='room.Room')),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantThumbUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='room.Room')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('uniuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('description_ch', models.TextField()),
                ('description_en', models.TextField()),
                ('location', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'users',
                'abstract': False,
                'verbose_name': 'user',
            },
            bases=('user.uniuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='participantthumbup',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='p_thumb_ups_recv', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='participantthumbup',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='p_thumb_ups_sent', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='participantthumbdown',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='p_thumb_downs_recv', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='participantthumbdown',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='p_thumb_downs_sent', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='hostthumbup',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='h_thumb_ups_recv', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='hostthumbup',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='h_thumb_ups_sent', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='hostthumbdown',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='h_thumb_downs_recv', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='hostthumbdown',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='h_thumb_downs_sent', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='uniuser',
            name='follows',
            field=models.ManyToManyField(blank=True, related_name='_uniuser_follows_+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='uniuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='uniuser',
            name='h_thumb_downs_from',
            field=models.ManyToManyField(related_name='h_thumb_downs_to', through='user.HostThumbDown', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='uniuser',
            name='h_thumb_ups_from',
            field=models.ManyToManyField(related_name='h_thumb_ups_to', through='user.HostThumbUp', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='uniuser',
            name='labels',
            field=models.ManyToManyField(blank=True, to='other.Label'),
        ),
        migrations.AddField(
            model_name='uniuser',
            name='p_thumb_downs_from',
            field=models.ManyToManyField(related_name='p_thumb_downs_to', through='user.ParticipantThumbDown', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='uniuser',
            name='p_thumb_ups_from',
            field=models.ManyToManyField(related_name='p_thumb_ups_to', through='user.ParticipantThumbUp', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='uniuser',
            name='university',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='other.University'),
        ),
        migrations.AddField(
            model_name='uniuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='participantthumbup',
            unique_together=set([('room', 'user', 'target')]),
        ),
        migrations.AlterUniqueTogether(
            name='participantthumbdown',
            unique_together=set([('room', 'user', 'target')]),
        ),
        migrations.AlterUniqueTogether(
            name='hostthumbup',
            unique_together=set([('room', 'user', 'target')]),
        ),
        migrations.AlterUniqueTogether(
            name='hostthumbdown',
            unique_together=set([('room', 'user', 'target')]),
        ),
    ]
